# Standalone Dockerfile for CRDT Server
FROM rust:1.82-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    musl-dev \
    openssl-dev \
    pkgconfig \
    gcc \
    make

WORKDIR /app

# Copy CRDT server source (path relative to project root)
COPY crdt-server ./crdt-server

# Build CRDT server
WORKDIR /app/crdt-server
RUN cargo build --release

# Runtime stage
FROM alpine:latest

# Install runtime dependencies
RUN apk add --no-cache \
    ca-certificates \
    openssl \
    libgcc \
    curl \
    bash

# Create non-root user
RUN addgroup -g 1001 -S crdt && \
    adduser -S crdt -u 1001

# Copy binary from builder
COPY --from=builder /app/crdt-server/target/release/server /usr/local/bin/server

# Copy start script (from context, not builder)
COPY deployments/railway/start-crdt.sh /usr/local/bin/start.sh

# Set ownership and permissions
RUN chown crdt:crdt /usr/local/bin/server /usr/local/bin/start.sh && \
    chmod +x /usr/local/bin/server /usr/local/bin/start.sh

# Switch to non-root user
USER crdt

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${PORT:-8080}/health || exit 1

# Use the start script
CMD ["/usr/local/bin/start.sh"]
