user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=ai_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

    # Upstream definitions for OpenAI Functions
    upstream openai_functions {
        least_conn;
        server openai-functions:3456 max_fails=3 fail_timeout=30s;
        # Add more instances for scaling
        # server openai-functions-2:3456 max_fails=3 fail_timeout=30s;
        # server openai-functions-3:3456 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }

    # Upstream definitions for MCP Server
    upstream mcp_server {
        least_conn;
        server mcp-server:3457 max_fails=3 fail_timeout=30s;
        # Add more instances for scaling
        # server mcp-server-2:3457 max_fails=3 fail_timeout=30s;
        # server mcp-server-3:3457 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }

    # Main server block
    server {
        listen 80;
        server_name ai.zeal.local;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Client body size for file uploads
        client_max_body_size 10M;
        client_body_buffer_size 128k;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # OpenAI Functions endpoints
        location /openai/ {
            # Rate limiting
            limit_req zone=ai_limit burst=20 nodelay;
            limit_conn conn_limit 10;

            # Remove /openai prefix when proxying
            rewrite ^/openai/(.*) /$1 break;

            # Proxy settings
            proxy_pass http://openai_functions;
            proxy_http_version 1.1;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 24 4k;
            proxy_busy_buffers_size 8k;
            proxy_max_temp_file_size 2048m;
            proxy_temp_file_write_size 32k;

            # Caching for GET requests
            proxy_cache_methods GET HEAD;
            proxy_cache_valid 200 1m;
            proxy_cache_valid 404 1m;
            proxy_cache_bypass $http_cache_control;
            proxy_no_cache $http_pragma $http_authorization;
        }

        # OpenAI Functions SSE endpoint for streaming
        location /openai/stream/ {
            # Rate limiting
            limit_req zone=ai_limit burst=5 nodelay;
            limit_conn conn_limit 5;

            # Remove /openai prefix when proxying
            rewrite ^/openai/(.*) /$1 break;

            # Proxy settings
            proxy_pass http://openai_functions;
            proxy_http_version 1.1;
            
            # SSE specific settings
            proxy_set_header Connection "";
            proxy_set_header Cache-Control "no-cache";
            proxy_set_header X-Accel-Buffering "no";
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Disable buffering for SSE
            proxy_buffering off;
            
            # Longer timeout for streaming
            proxy_read_timeout 3600s;
            
            # Enable chunked responses
            chunked_transfer_encoding on;
        }

        # MCP Server endpoints
        location /mcp/ {
            # Rate limiting
            limit_req zone=ai_limit burst=20 nodelay;
            limit_conn conn_limit 10;

            # Remove /mcp prefix when proxying
            rewrite ^/mcp/(.*) /$1 break;

            # Proxy settings
            proxy_pass http://mcp_server;
            proxy_http_version 1.1;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 24 4k;
            proxy_busy_buffers_size 8k;
            proxy_max_temp_file_size 2048m;
            proxy_temp_file_write_size 32k;

            # Caching for GET requests
            proxy_cache_methods GET HEAD;
            proxy_cache_valid 200 1m;
            proxy_cache_valid 404 1m;
            proxy_cache_bypass $http_cache_control;
            proxy_no_cache $http_pragma $http_authorization;
        }

        # WebSocket support for MCP
        location /mcp/ws {
            # Rate limiting
            limit_conn conn_limit 5;

            # Remove /mcp prefix when proxying
            rewrite ^/mcp/(.*) /$1 break;

            # Proxy settings
            proxy_pass http://mcp_server;
            proxy_http_version 1.1;
            
            # WebSocket headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts for WebSocket
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
            
            # Disable buffering for WebSocket
            proxy_buffering off;
        }

        # API documentation (if available)
        location /docs {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /docs/index.html;
        }

        # Metrics endpoint (for monitoring)
        location /metrics {
            # Restrict access to monitoring systems
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            # Stub status for basic metrics
            stub_status;
            access_log off;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # SSL server block (for production)
    server {
        listen 443 ssl http2;
        server_name ai.zeal.example.com;

        # SSL certificates
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_stapling on;
        ssl_stapling_verify on;

        # Include all location blocks from above
        # (copy all location blocks from the HTTP server)
    }
}