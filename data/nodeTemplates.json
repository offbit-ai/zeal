[
  {
    "id": "tpl_postgresql",
    "type": "database",
    "title": "PostgreSQL",
    "subtitle": "Database Connection Pool",
    "category": "data-sources",
    "subcategory": "databases",
    "description": "Connect to PostgreSQL database and return connection pool ID",
    "icon": "database",
    "variant": "black",
    "shape": "rectangle",
    "size": "medium",
    "ports": [
      { "id": "pool-out", "label": "Pool ID", "type": "output", "position": "right" },
      { "id": "status-out", "label": "Status", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "host": { "type": "text", "required": true, "placeholder": "localhost" },
      "port": { "type": "number", "defaultValue": 5432 },
      "database": { "type": "text", "required": true, "placeholder": "myapp" },
      "maxConnections": { "type": "number", "defaultValue": 10 },
      "connectionTimeout": { "type": "number", "defaultValue": 30000 }
    },
    "requiredEnvVars": ["DATABASE_URL", "DB_PASSWORD", "DB_USER"],
    "tags": ["database", "sql", "postgresql", "pool"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_mysql",
    "type": "database",
    "title": "MySQL",
    "subtitle": "Database Connection Pool",
    "category": "data-sources",
    "subcategory": "databases",
    "description": "Connect to MySQL database and return connection pool ID",
    "icon": "database",
    "variant": "gray-700",
    "shape": "rectangle",
    "size": "medium",
    "ports": [
      { "id": "pool-out", "label": "Pool ID", "type": "output", "position": "right" },
      { "id": "status-out", "label": "Status", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "host": { "type": "text", "required": true, "placeholder": "localhost" },
      "port": { "type": "number", "defaultValue": 3306 },
      "database": { "type": "text", "required": true, "placeholder": "myapp" },
      "maxConnections": { "type": "number", "defaultValue": 10 },
      "connectionTimeout": { "type": "number", "defaultValue": 30000 }
    },
    "requiredEnvVars": ["MYSQL_URL", "MYSQL_PASSWORD", "MYSQL_USER"],
    "tags": ["database", "sql", "mysql", "pool"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_mongodb",
    "type": "database",
    "title": "MongoDB",
    "subtitle": "Database Connection Pool",
    "category": "data-sources",
    "subcategory": "databases",
    "description": "Connect to MongoDB database and return connection pool ID",
    "icon": "database",
    "variant": "green-700",
    "shape": "circle",
    "size": "medium",
    "ports": [
      { "id": "pool-out", "label": "Pool ID", "type": "output", "position": "right" },
      { "id": "status-out", "label": "Status", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "host": { "type": "text", "required": true, "placeholder": "localhost" },
      "port": { "type": "number", "defaultValue": 27017 },
      "database": { "type": "text", "required": true, "placeholder": "myapp" },
      "maxConnections": { "type": "number", "defaultValue": 10 },
      "replicaSet": { "type": "text", "placeholder": "rs0" }
    },
    "requiredEnvVars": ["MONGODB_URL", "MONGODB_PASSWORD", "MONGODB_USER"],
    "tags": ["database", "nosql", "mongodb", "pool"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_mongo_get_collection",
    "type": "mongo-operation",
    "title": "Get Collection",
    "subtitle": "MongoDB Collection Operations",
    "category": "data-sources",
    "subcategory": "databases",
    "description": "Retrieve documents from MongoDB collection",
    "icon": "folder",
    "variant": "green-600",
    "shape": "rectangle",
    "size": "medium",
    "ports": [
      { "id": "pool-in", "label": "Pool ID", "type": "input", "position": "left" },
      { "id": "query-in", "label": "Query", "type": "input", "position": "top" },
      { "id": "docs-out", "label": "Documents", "type": "output", "position": "right" },
      { "id": "count-out", "label": "Count", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "collection": { "type": "text", "required": true, "placeholder": "users" },
      "operation": { "type": "select", "options": ["find", "findOne", "aggregate"], "defaultValue": "find" },
      "limit": { "type": "number", "defaultValue": 100 },
      "sort": { "type": "textarea", "placeholder": "{ \"createdAt\": -1 }" },
      "projection": { "type": "textarea", "placeholder": "{ \"password\": 0 }" }
    },
    "tags": ["mongodb", "collection", "query"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_python_script",
    "type": "script",
    "title": "Python Script",
    "subtitle": "Execute Python with pip packages",
    "category": "scripting",
    "subcategory": "python",
    "description": "Execute sandboxed Python scripts with pip package support",
    "icon": "code",
    "variant": "orange-700",
    "shape": "rectangle",
    "size": "large",
    "ports": [
      { "id": "data-in", "label": "Data", "type": "input", "position": "left" },
      { "id": "config-in", "label": "Config", "type": "input", "position": "top" },
      { "id": "result-out", "label": "Result", "type": "output", "position": "right" },
      { "id": "error-out", "label": "Error", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "script": { 
        "type": "code-editor", 
        "language": "python", 
        "required": true, 
        "lineNumbers": true,
        "wordWrap": true,
        "placeholder": "# Access input data via imports and metadata\n# Example:\n# import pandas as pd\n# data = imports.get(\"data\", [])\n# df = pd.DataFrame(data)\n# result = df.describe().to_dict()\n# return {\"processed\": result}" 
      },
      "packages": { "type": "textarea", "placeholder": "pandas\nnumpy\nrequests", "description": "Pip packages to install (one per line)" },
      "timeout": { "type": "number", "defaultValue": 30000, "min": 1000, "max": 300000 },
      "memoryLimit": { "type": "number", "defaultValue": 512, "description": "Memory limit in MB" }
    },
    "tags": ["script", "python", "sandboxed", "pip", "processing"],
    "version": "1.1.0",
    "isActive": true
  },
  {
    "id": "tpl_javascript_script",
    "type": "script",
    "title": "JavaScript Script",
    "subtitle": "Sandboxed JavaScript Runtime",
    "category": "scripting",
    "subcategory": "javascript",
    "description": "Execute sandboxed JavaScript code (no external packages)",
    "icon": "code",
    "variant": "gray-900",
    "shape": "rectangle",
    "size": "large",
    "ports": [
      { "id": "data-in", "label": "Data", "type": "input", "position": "left" },
      { "id": "metadata-in", "label": "Metadata", "type": "input", "position": "top" },
      { "id": "result-out", "label": "Result", "type": "output", "position": "right" },
      { "id": "error-out", "label": "Error", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "script": { 
        "type": "code-editor", 
        "language": "javascript", 
        "required": true, 
        "lineNumbers": true,
        "wordWrap": true,
        "placeholder": "// Access input data via imports and metadata\n// Example:\n// const data = imports.data || [];\n// const processed = data.map(item => ({\n//   ...item,\n//   processed: true,\n//   timestamp: Date.now()\n// }));\n// return { processed };" 
      },
      "timeout": { "type": "number", "defaultValue": 10000, "min": 100, "max": 60000 },
      "memoryLimit": { "type": "number", "defaultValue": 128, "description": "Memory limit in MB" }
    },
    "tags": ["script", "javascript", "sandboxed", "processing"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_nushell_script",
    "type": "script",
    "title": "NuShell Script",
    "subtitle": "Structured Shell Scripting",
    "category": "scripting",
    "subcategory": "nushell",
    "description": "Execute NuShell scripts for structured data processing",
    "icon": "terminal",
    "variant": "green-600",
    "shape": "rectangle",
    "size": "large",
    "ports": [
      { "id": "data-in", "label": "Data", "type": "input", "position": "left" },
      { "id": "args-in", "label": "Args", "type": "input", "position": "top" },
      { "id": "result-out", "label": "Result", "type": "output", "position": "right" },
      { "id": "error-out", "label": "Error", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "script": { 
        "type": "code-editor", 
        "language": "shell", 
        "required": true, 
        "lineNumbers": true,
        "wordWrap": true,
        "placeholder": "# NuShell script for structured data processing\n# Example:\n# $data | where status == \"active\" | select name email | to json" 
      },
      "timeout": { "type": "number", "defaultValue": 15000, "min": 1000, "max": 120000 },
      "workingDirectory": { "type": "text", "placeholder": "/tmp/workspace" }
    },
    "tags": ["script", "nushell", "shell", "structured"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_sql_script",
    "type": "script",
    "title": "SQL Script",
    "subtitle": "Execute SQL queries",
    "category": "scripting",
    "subcategory": "sql",
    "description": "Execute SQL queries using database connection pool",
    "icon": "database",
    "variant": "gray-700",
    "shape": "rectangle",
    "size": "large",
    "ports": [
      { "id": "pool-in", "label": "Pool ID", "type": "input", "position": "left" },
      { "id": "params-in", "label": "Parameters", "type": "input", "position": "top" },
      { "id": "result-out", "label": "Result", "type": "output", "position": "right" },
      { "id": "error-out", "label": "Error", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "query": { 
        "type": "code-editor", 
        "language": "sql", 
        "required": true, 
        "lineNumbers": true,
        "wordWrap": true,
        "placeholder": "-- SQL query with parameters\n-- Use $1, $2, etc. for PostgreSQL parameters\n-- Use ? for MySQL parameters\nSELECT * FROM users WHERE status = $1 AND created_at > $2;" 
      },
      "queryType": { "type": "select", "options": ["SELECT", "INSERT", "UPDATE", "DELETE", "TRANSACTION"], "defaultValue": "SELECT" },
      "timeout": { "type": "number", "defaultValue": 30000, "min": 1000, "max": 300000 },
      "maxRows": { "type": "number", "defaultValue": 1000, "description": "Maximum rows to return" }
    },
    "tags": ["script", "sql", "database", "query"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_claude",
    "type": "ai-model",
    "title": "Claude",
    "subtitle": "Anthropic AI Assistant",
    "category": "ai-models",
    "subcategory": "llm",
    "description": "Anthropic Claude for text generation and analysis",
    "icon": "bot",
    "variant": "black",
    "shape": "circle",
    "size": "large",
    "ports": [
      { "id": "prompt-in", "label": "Prompt", "type": "input", "position": "left" },
      { "id": "context-in", "label": "Context", "type": "input", "position": "top" },
      { "id": "response-out", "label": "Response", "type": "output", "position": "right" },
      { "id": "usage-out", "label": "Usage", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "model": { "type": "select", "options": ["claude-3-5-sonnet", "claude-3-opus", "claude-3-sonnet", "claude-3-haiku"], "defaultValue": "claude-3-5-sonnet" },
      "maxTokens": { "type": "number", "defaultValue": 1000, "min": 1, "max": 4000 },
      "temperature": { "type": "number", "defaultValue": 0.7, "min": 0, "max": 1, "step": 0.1 },
      "systemPrompt": { "type": "textarea", "placeholder": "You are a helpful assistant...", "description": "Define the AI assistant behavior and context" },
      "responseRules": { 
        "type": "rules",
        "availableFields": ["Response Length", "Confidence Score", "Content Type", "Language", "Sentiment", "Topic"],
        "availableOperators": ["is", "is_not", "contains", "not_contains", "greater_than", "less_than"],
        "description": "Define rules to process and route AI responses based on content analysis"
      }
    },
    "requiredEnvVars": ["ANTHROPIC_API_KEY"],
    "tags": ["ai", "llm", "claude", "text-generation"],
    "version": "1.2.0",
    "isActive": true
  },
  {
    "id": "tpl_openai_gpt",
    "type": "ai-model",
    "title": "OpenAI GPT",
    "subtitle": "GPT-4 Language Model",
    "category": "ai-models",
    "subcategory": "llm",
    "description": "OpenAI GPT models for text generation and analysis",
    "icon": "brain",
    "variant": "green-600",
    "shape": "circle",
    "size": "large",
    "ports": [
      { "id": "prompt-in", "label": "Prompt", "type": "input", "position": "left" },
      { "id": "context-in", "label": "Context", "type": "input", "position": "top" },
      { "id": "response-out", "label": "Response", "type": "output", "position": "right" },
      { "id": "usage-out", "label": "Usage", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "model": { "type": "select", "options": ["gpt-4", "gpt-4-turbo", "gpt-3.5-turbo"], "defaultValue": "gpt-4" },
      "maxTokens": { "type": "number", "defaultValue": 1000, "min": 1, "max": 4000 },
      "temperature": { "type": "number", "defaultValue": 0.7, "min": 0, "max": 2, "step": 0.1 },
      "topP": { "type": "number", "defaultValue": 1, "min": 0, "max": 1, "step": 0.1 },
      "systemPrompt": { "type": "textarea", "placeholder": "You are a helpful assistant...", "description": "System message to guide model behavior" }
    },
    "requiredEnvVars": ["OPENAI_API_KEY"],
    "tags": ["ai", "llm", "openai", "gpt", "text-generation"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_gemini",
    "type": "ai-model",
    "title": "Gemini",
    "subtitle": "Google Gemini AI",
    "category": "ai-models",
    "subcategory": "llm",
    "description": "Google Gemini for multimodal AI tasks",
    "icon": "sparkle",
    "variant": "blue-600",
    "shape": "circle",
    "size": "large",
    "ports": [
      { "id": "prompt-in", "label": "Prompt", "type": "input", "position": "left" },
      { "id": "media-in", "label": "Media", "type": "input", "position": "top" },
      { "id": "response-out", "label": "Response", "type": "output", "position": "right" },
      { "id": "analysis-out", "label": "Analysis", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "model": { "type": "select", "options": ["gemini-pro", "gemini-pro-vision"], "defaultValue": "gemini-pro" },
      "maxTokens": { "type": "number", "defaultValue": 1000, "min": 1, "max": 8192 },
      "temperature": { "type": "number", "defaultValue": 0.7, "min": 0, "max": 1, "step": 0.1 },
      "safetySettings": { "type": "select", "options": ["block_none", "block_few", "block_some", "block_most"], "defaultValue": "block_few" }
    },
    "requiredEnvVars": ["GOOGLE_API_KEY"],
    "tags": ["ai", "llm", "google", "gemini", "multimodal"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_replicate_agent",
    "type": "ai-agent",
    "title": "Replicate AI Agent",
    "subtitle": "Custom Model Runner",
    "category": "ai-models",
    "subcategory": "agents",
    "description": "Run custom AI models from Replicate",
    "icon": "cpu",
    "variant": "gray-900",
    "shape": "hexagon",
    "size": "large",
    "ports": [
      { "id": "input-in", "label": "Input", "type": "input", "position": "left" },
      { "id": "config-in", "label": "Config", "type": "input", "position": "top" },
      { "id": "output-out", "label": "Output", "type": "output", "position": "right" },
      { "id": "metadata-out", "label": "Metadata", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "modelId": { "type": "text", "required": true, "placeholder": "stability-ai/stable-diffusion" },
      "version": { "type": "text", "placeholder": "latest" },
      "inputMapping": { "type": "textarea", "placeholder": "{ \"prompt\": \"$input.text\" }" },
      "timeout": { "type": "number", "defaultValue": 60000 }
    },
    "requiredEnvVars": ["REPLICATE_API_TOKEN"],
    "tags": ["ai", "agent", "replicate", "custom-model"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_langchain_agent",
    "type": "ai-agent",
    "title": "LangChain Agent",
    "subtitle": "AI Agent with Tools",
    "category": "ai-models",
    "subcategory": "agent-tools",
    "description": "LangChain agent with access to multiple tools",
    "icon": "wrench",
    "variant": "orange-600",
    "shape": "octagon",
    "size": "large",
    "ports": [
      { "id": "query-in", "label": "Query", "type": "input", "position": "left" },
      { "id": "tools-in", "label": "Tools Config", "type": "input", "position": "top" },
      { "id": "result-out", "label": "Result", "type": "output", "position": "right" },
      { "id": "steps-out", "label": "Steps", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "agentType": { "type": "select", "options": ["zero-shot-react", "conversational", "plan-and-execute"], "defaultValue": "zero-shot-react" },
      "enabledTools": { 
        "type": "select", 
        "multiple": true,
        "options": ["search", "calculator", "wikipedia", "weather", "news"],
        "defaultValue": ["search", "calculator"]
      },
      "maxIterations": { "type": "number", "defaultValue": 5, "min": 1, "max": 20 },
      "memory": { "type": "boolean", "defaultValue": true }
    },
    "requiredEnvVars": ["OPENAI_API_KEY", "SERPAPI_API_KEY"],
    "tags": ["ai", "agent", "langchain", "tools"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_if_branch",
    "type": "condition",
    "title": "If Branch",
    "subtitle": "Conditional Logic",
    "category": "logic-control",
    "subcategory": "conditions",
    "description": "Route data flow based on conditional rules",
    "icon": "git-branch",
    "variant": "gray-700",
    "shape": "diamond",
    "size": "medium",
    "ports": [
      { "id": "input-in", "label": "Input", "type": "input", "position": "top" },
      { "id": "true-out", "label": "True", "type": "output", "position": "right" },
      { "id": "false-out", "label": "False", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "decisionRules": { 
        "type": "rules",
        "availableFields": ["value", "count", "status", "type", "category", "price", "quantity", "date", "amount"],
        "availableOperators": ["is", "is_not", "contains", "not_contains", "greater_than", "less_than", "greater_equal", "less_equal", "empty", "not_empty"],
        "description": "Define the conditions that determine True or False output. If any rule set evaluates to true, the True port will be activated."
      }
    },
    "tags": ["logic", "conditional", "routing", "branch"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_switch",
    "type": "condition",
    "title": "Switch",
    "subtitle": "Multi-way Branch",
    "category": "logic-control",
    "subcategory": "conditions",
    "description": "Route data to multiple outputs based on value matching",
    "icon": "split",
    "variant": "orange-600",
    "shape": "hexagon",
    "size": "large",
    "ports": [
      { "id": "input-in", "label": "Input", "type": "input", "position": "left" },
      { "id": "case1-out", "label": "Case 1", "type": "output", "position": "top" },
      { "id": "case2-out", "label": "Case 2", "type": "output", "position": "right" },
      { "id": "case3-out", "label": "Case 3", "type": "output", "position": "bottom" },
      { "id": "default-out", "label": "Default", "type": "output", "position": "left" }
    ],
    "properties": {
      "switchField": { "type": "text", "required": true, "placeholder": "status", "description": "Field name to switch on" },
      "case1Value": { "type": "text", "placeholder": "active" },
      "case2Value": { "type": "text", "placeholder": "pending" },
      "case3Value": { "type": "text", "placeholder": "inactive" },
      "caseSensitive": { "type": "boolean", "defaultValue": true }
    },
    "tags": ["logic", "switch", "routing", "multi-branch"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_loop",
    "type": "control",
    "title": "Loop",
    "subtitle": "Iterate Over Data",
    "category": "logic-control",
    "subcategory": "loops",
    "description": "Loop through arrays or collections",
    "icon": "repeat",
    "variant": "blue-600",
    "shape": "rounded-square",
    "size": "medium",
    "ports": [
      { "id": "items-in", "label": "Items", "type": "input", "position": "left" },
      { "id": "item-out", "label": "Current Item", "type": "output", "position": "right" },
      { "id": "index-out", "label": "Index", "type": "output", "position": "top" },
      { "id": "done-out", "label": "Done", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "loopType": { "type": "select", "options": ["for-each", "while", "do-while"], "defaultValue": "for-each" },
      "batchSize": { "type": "number", "defaultValue": 1, "description": "Process items in batches" },
      "maxIterations": { "type": "number", "defaultValue": 1000, "description": "Safety limit for iterations" },
      "breakCondition": { "type": "textarea", "placeholder": "item.status === 'stop'" }
    },
    "tags": ["loop", "iterate", "control", "batch"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_data_transformer",
    "type": "transformer",
    "title": "Data Transformer",
    "subtitle": "Transform & Process Data",
    "category": "data-processing",
    "subcategory": "transformers",
    "description": "Transform and manipulate data using filters and operations",
    "icon": "shuffle",
    "variant": "blue-700",
    "shape": "rectangle",
    "size": "large",
    "ports": [
      { "id": "data-in", "label": "Input Data", "type": "input", "position": "left" },
      { "id": "schema-in", "label": "Schema", "type": "input", "position": "top" },
      { "id": "transformed-out", "label": "Transformed", "type": "output", "position": "right" },
      { "id": "errors-out", "label": "Errors", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "dataOperations": { 
        "type": "dataOperations",
        "availableFields": ["id", "name", "email", "status", "created_at", "updated_at", "first_name", "last_name", "age", "department", "salary", "role", "address", "phone"],
        "description": "Configure data transformation pipelines including mapping, filtering, sorting, and aggregation"
      },
      "errorHandling": { "type": "select", "options": ["ignore", "skip_item", "stop_pipeline", "log_and_continue"], "defaultValue": "log_and_continue" },
      "batchSize": { "type": "number", "defaultValue": 1000, "description": "Number of items to process in each batch" },
      "enableValidation": { "type": "boolean", "defaultValue": true, "description": "Validate data before and after transformation" }
    },
    "tags": ["transform", "data", "processing", "filter"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_csv_reader",
    "type": "reader",
    "title": "CSV Reader",
    "subtitle": "Parse CSV Files",
    "category": "data-processing",
    "subcategory": "transformers",
    "description": "Read and parse CSV files with configurable options",
    "icon": "file-text",
    "variant": "green-600",
    "shape": "rectangle",
    "size": "medium",
    "ports": [
      { "id": "file-in", "label": "File Path", "type": "input", "position": "left" },
      { "id": "data-out", "label": "Parsed Data", "type": "output", "position": "right" },
      { "id": "errors-out", "label": "Parse Errors", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "delimiter": { "type": "select", "options": [",", ";", "\t", "|"], "defaultValue": "," },
      "hasHeader": { "type": "boolean", "defaultValue": true },
      "skipRows": { "type": "number", "defaultValue": 0 },
      "encoding": { "type": "select", "options": ["utf-8", "latin1", "ascii"], "defaultValue": "utf-8" },
      "dateFormat": { "type": "text", "placeholder": "YYYY-MM-DD" }
    },
    "tags": ["csv", "reader", "parser", "file"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_arrow_operations",
    "type": "arrow",
    "title": "Apache Arrow",
    "subtitle": "High-Performance Data Processing",
    "category": "data-processing",
    "subcategory": "aggregators",
    "description": "Process data using Apache Arrow columnar format",
    "icon": "zap",
    "variant": "gray-900",
    "shape": "hexagon",
    "size": "large",
    "ports": [
      { "id": "data-in", "label": "Data", "type": "input", "position": "left" },
      { "id": "schema-in", "label": "Schema", "type": "input", "position": "top" },
      { "id": "table-out", "label": "Arrow Table", "type": "output", "position": "right" },
      { "id": "stats-out", "label": "Statistics", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "operation": { "type": "select", "options": ["convert", "filter", "aggregate", "join", "sort"], "defaultValue": "convert" },
      "compression": { "type": "select", "options": ["none", "snappy", "gzip", "lz4"], "defaultValue": "snappy" },
      "chunkSize": { "type": "number", "defaultValue": 10000 },
      "enableStatistics": { "type": "boolean", "defaultValue": true }
    },
    "tags": ["arrow", "columnar", "performance", "analytics"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_email_sender",
    "type": "communication",
    "title": "Email Sender",
    "subtitle": "Send Email Messages",
    "category": "communication",
    "subcategory": "email",
    "description": "Send emails via SMTP or email service providers",
    "icon": "mail",
    "variant": "blue-600",
    "shape": "rectangle",
    "size": "medium",
    "ports": [
      { "id": "content-in", "label": "Content", "type": "input", "position": "left" },
      { "id": "recipients-in", "label": "Recipients", "type": "input", "position": "top" },
      { "id": "sent-out", "label": "Sent", "type": "output", "position": "right" },
      { "id": "failed-out", "label": "Failed", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "provider": { "type": "select", "options": ["smtp", "sendgrid", "mailgun", "ses"], "defaultValue": "smtp" },
      "subject": { "type": "text", "required": true, "placeholder": "Email subject" },
      "fromEmail": { "type": "text", "required": true, "placeholder": "sender@example.com" },
      "fromName": { "type": "text", "placeholder": "Sender Name" },
      "templateEngine": { "type": "select", "options": ["none", "handlebars", "mustache"], "defaultValue": "none" }
    },
    "requiredEnvVars": ["SMTP_HOST", "SMTP_USER", "SMTP_PASSWORD"],
    "tags": ["email", "communication", "smtp", "notification"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_slack_webhook",
    "type": "communication",
    "title": "Slack Webhook",
    "subtitle": "Send Slack Messages",
    "category": "communication",
    "subcategory": "messaging",
    "description": "Send messages to Slack channels via webhook",
    "icon": "message-square",
    "variant": "gray-800",
    "shape": "circle",
    "size": "medium",
    "ports": [
      { "id": "message-in", "label": "Message", "type": "input", "position": "left" },
      { "id": "sent-out", "label": "Sent", "type": "output", "position": "right" },
      { "id": "error-out", "label": "Error", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "channel": { "type": "text", "placeholder": "#general" },
      "username": { "type": "text", "placeholder": "Workflow Bot" },
      "iconEmoji": { "type": "text", "placeholder": ":robot_face:" },
      "messageType": { "type": "select", "options": ["plain", "markdown", "blocks"], "defaultValue": "markdown" }
    },
    "requiredEnvVars": ["SLACK_WEBHOOK_URL"],
    "tags": ["slack", "webhook", "chat", "notification"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_twilio_sms",
    "type": "communication",
    "title": "Twilio SMS",
    "subtitle": "Send SMS Messages",
    "category": "communication",
    "subcategory": "voice",
    "description": "Send SMS messages via Twilio",
    "icon": "smartphone",
    "variant": "gray-700",
    "shape": "rounded-square",
    "size": "medium",
    "ports": [
      { "id": "message-in", "label": "Message", "type": "input", "position": "left" },
      { "id": "recipients-in", "label": "Recipients", "type": "input", "position": "top" },
      { "id": "sent-out", "label": "Sent", "type": "output", "position": "right" },
      { "id": "status-out", "label": "Status", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "fromNumber": { "type": "text", "required": true, "placeholder": "+1234567890" },
      "mediaUrl": { "type": "text", "placeholder": "https://example.com/image.jpg" },
      "statusCallback": { "type": "text", "placeholder": "https://example.com/webhook" },
      "maxPrice": { "type": "number", "step": 0.01, "placeholder": "0.10" }
    },
    "requiredEnvVars": ["TWILIO_ACCOUNT_SID", "TWILIO_AUTH_TOKEN"],
    "tags": ["sms", "twilio", "communication", "mobile"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_discord_webhook",
    "type": "communication",
    "title": "Discord Webhook",
    "subtitle": "Send Discord Messages",
    "category": "communication",
    "subcategory": "messaging",
    "description": "Send messages to Discord channels",
    "icon": "message-circle",
    "variant": "black",
    "shape": "circle",
    "size": "medium",
    "ports": [
      { "id": "message-in", "label": "Message", "type": "input", "position": "left" },
      { "id": "embed-in", "label": "Embed", "type": "input", "position": "top" },
      { "id": "sent-out", "label": "Sent", "type": "output", "position": "right" }
    ],
    "properties": {
      "username": { "type": "text", "placeholder": "Workflow Bot" },
      "avatarUrl": { "type": "text", "placeholder": "https://example.com/avatar.png" },
      "tts": { "type": "boolean", "defaultValue": false },
      "embedColor": { "type": "text", "placeholder": "#7289DA" }
    },
    "requiredEnvVars": ["DISCORD_WEBHOOK_URL"],
    "tags": ["discord", "webhook", "chat", "gaming"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_twitter_post",
    "type": "social",
    "title": "Twitter/X Post",
    "subtitle": "Post to Twitter/X",
    "category": "communication",
    "subcategory": "messaging",
    "description": "Post tweets to Twitter/X",
    "icon": "twitter",
    "variant": "blue-600",
    "shape": "circle",
    "size": "medium",
    "ports": [
      { "id": "content-in", "label": "Content", "type": "input", "position": "left" },
      { "id": "media-in", "label": "Media", "type": "input", "position": "top" },
      { "id": "tweet-out", "label": "Tweet", "type": "output", "position": "right" },
      { "id": "metrics-out", "label": "Metrics", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "replyTo": { "type": "text", "placeholder": "Tweet ID to reply to" },
      "sensitive": { "type": "boolean", "defaultValue": false },
      "geo": { "type": "textarea", "placeholder": "{ \"lat\": 37.7749, \"long\": -122.4194 }" },
      "pollOptions": { "type": "textarea", "placeholder": "Option 1\nOption 2\nOption 3" }
    },
    "requiredEnvVars": ["TWITTER_API_KEY", "TWITTER_API_SECRET", "TWITTER_ACCESS_TOKEN", "TWITTER_ACCESS_SECRET"],
    "tags": ["twitter", "social", "tweet", "microblog"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_facebook_post",
    "type": "social",
    "title": "Facebook Post",
    "subtitle": "Post to Facebook",
    "category": "communication",
    "subcategory": "messaging",
    "description": "Create posts on Facebook pages",
    "icon": "facebook",
    "variant": "blue-700",
    "shape": "circle",
    "size": "medium",
    "ports": [
      { "id": "content-in", "label": "Content", "type": "input", "position": "left" },
      { "id": "media-in", "label": "Media", "type": "input", "position": "top" },
      { "id": "post-out", "label": "Post", "type": "output", "position": "right" },
      { "id": "insights-out", "label": "Insights", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "pageId": { "type": "text", "required": true, "placeholder": "Facebook Page ID" },
      "scheduling": { "type": "boolean", "defaultValue": false },
      "publishTime": { "type": "text", "placeholder": "2024-12-25T10:00:00Z" },
      "targeting": { "type": "textarea", "placeholder": "{ \"countries\": [\"US\", \"CA\"] }" }
    },
    "requiredEnvVars": ["FACEBOOK_ACCESS_TOKEN"],
    "tags": ["facebook", "social", "meta", "marketing"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_linkedin_post",
    "type": "social",
    "title": "LinkedIn Post",
    "subtitle": "Share on LinkedIn",
    "category": "communication",
    "subcategory": "messaging",
    "description": "Share content on LinkedIn",
    "icon": "linkedin",
    "variant": "blue-800",
    "shape": "circle",
    "size": "medium",
    "ports": [
      { "id": "content-in", "label": "Content", "type": "input", "position": "left" },
      { "id": "article-in", "label": "Article", "type": "input", "position": "top" },
      { "id": "share-out", "label": "Share", "type": "output", "position": "right" },
      { "id": "analytics-out", "label": "Analytics", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "visibility": { "type": "select", "options": ["anyone", "connections", "logged_in"], "defaultValue": "anyone" },
      "shareType": { "type": "select", "options": ["share", "article", "image", "video"], "defaultValue": "share" },
      "companyId": { "type": "text", "placeholder": "Company page ID (optional)" }
    },
    "requiredEnvVars": ["LINKEDIN_ACCESS_TOKEN"],
    "tags": ["linkedin", "social", "professional", "business"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_google_sheets",
    "type": "spreadsheet",
    "title": "Google Sheets",
    "subtitle": "Read/Write Spreadsheets",
    "category": "data-sources",
    "subcategory": "files",
    "description": "Interact with Google Sheets",
    "icon": "table",
    "variant": "green-700",
    "shape": "rectangle",
    "size": "medium",
    "ports": [
      { "id": "data-in", "label": "Data", "type": "input", "position": "left" },
      { "id": "range-in", "label": "Range", "type": "input", "position": "top" },
      { "id": "values-out", "label": "Values", "type": "output", "position": "right" },
      { "id": "metadata-out", "label": "Metadata", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "spreadsheetId": { "type": "text", "required": true, "placeholder": "Spreadsheet ID" },
      "operation": { "type": "select", "options": ["read", "write", "append", "clear"], "defaultValue": "read" },
      "range": { "type": "text", "defaultValue": "A1:Z1000" },
      "valueInputOption": { "type": "select", "options": ["RAW", "USER_ENTERED"], "defaultValue": "USER_ENTERED" }
    },
    "requiredEnvVars": ["GOOGLE_SHEETS_API_KEY", "GOOGLE_SHEETS_CLIENT_EMAIL"],
    "tags": ["google", "sheets", "spreadsheet", "data"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_excel_reader",
    "type": "spreadsheet",
    "title": "Excel Reader",
    "subtitle": "Read Excel Files",
    "category": "data-sources",
    "subcategory": "files",
    "description": "Read data from Excel files",
    "icon": "file-spreadsheet",
    "variant": "green-600",
    "shape": "rectangle",
    "size": "medium",
    "ports": [
      { "id": "file-in", "label": "File Path", "type": "input", "position": "left" },
      { "id": "sheet-in", "label": "Sheet Name", "type": "input", "position": "top" },
      { "id": "data-out", "label": "Data", "type": "output", "position": "right" },
      { "id": "sheets-out", "label": "Sheet Names", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "sheetName": { "type": "text", "placeholder": "Sheet1" },
      "range": { "type": "text", "placeholder": "A1:Z1000" },
      "hasHeaders": { "type": "boolean", "defaultValue": true },
      "dateFormat": { "type": "text", "defaultValue": "YYYY-MM-DD" }
    },
    "tags": ["excel", "microsoft", "spreadsheet", "xlsx"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_s3_storage",
    "type": "storage",
    "title": "AWS S3",
    "subtitle": "Object Storage",
    "category": "data-sources",
    "subcategory": "files",
    "description": "Store and retrieve files from AWS S3",
    "icon": "cloud",
    "variant": "orange-600",
    "shape": "rectangle",
    "size": "medium",
    "ports": [
      { "id": "file-in", "label": "File", "type": "input", "position": "left" },
      { "id": "key-in", "label": "Key", "type": "input", "position": "top" },
      { "id": "url-out", "label": "URL", "type": "output", "position": "right" },
      { "id": "metadata-out", "label": "Metadata", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "bucket": { "type": "text", "required": true, "placeholder": "my-bucket" },
      "operation": { "type": "select", "options": ["upload", "download", "delete", "list"], "defaultValue": "upload" },
      "acl": { "type": "select", "options": ["private", "public-read", "public-read-write"], "defaultValue": "private" },
      "storageClass": { "type": "select", "options": ["STANDARD", "GLACIER", "DEEP_ARCHIVE"], "defaultValue": "STANDARD" }
    },
    "requiredEnvVars": ["AWS_ACCESS_KEY_ID", "AWS_SECRET_ACCESS_KEY", "AWS_REGION"],
    "tags": ["aws", "s3", "storage", "cloud"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_github_api",
    "type": "api",
    "title": "GitHub API",
    "subtitle": "GitHub Operations",
    "category": "data-sources",
    "subcategory": "apis",
    "description": "Interact with GitHub repositories and data",
    "icon": "github",
    "variant": "gray-900",
    "shape": "octagon",
    "size": "medium",
    "ports": [
      { "id": "params-in", "label": "Parameters", "type": "input", "position": "left" },
      { "id": "data-out", "label": "Data", "type": "output", "position": "right" },
      { "id": "rate-out", "label": "Rate Limit", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "operation": { "type": "select", "options": ["get-repo", "list-issues", "create-issue", "get-pr", "list-commits"], "defaultValue": "get-repo" },
      "owner": { "type": "text", "required": true, "placeholder": "octocat" },
      "repo": { "type": "text", "required": true, "placeholder": "hello-world" },
      "perPage": { "type": "number", "defaultValue": 30, "max": 100 }
    },
    "requiredEnvVars": ["GITHUB_TOKEN"],
    "tags": ["github", "git", "api", "repository"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_salesforce",
    "type": "crm",
    "title": "Salesforce",
    "subtitle": "CRM Operations",
    "category": "data-sources",
    "subcategory": "apis",
    "description": "Interact with Salesforce CRM",
    "icon": "users",
    "variant": "blue-500",
    "shape": "rounded-square",
    "size": "medium",
    "ports": [
      { "id": "query-in", "label": "Query/Data", "type": "input", "position": "left" },
      { "id": "records-out", "label": "Records", "type": "output", "position": "right" },
      { "id": "status-out", "label": "Status", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "operation": { "type": "select", "options": ["query", "insert", "update", "delete", "upsert"], "defaultValue": "query" },
      "object": { "type": "select", "options": ["Account", "Contact", "Lead", "Opportunity", "Case"], "defaultValue": "Account" },
      "soqlQuery": { "type": "textarea", "placeholder": "SELECT Id, Name FROM Account LIMIT 10" },
      "externalIdField": { "type": "text", "placeholder": "External_Id__c" }
    },
    "requiredEnvVars": ["SALESFORCE_CLIENT_ID", "SALESFORCE_CLIENT_SECRET", "SALESFORCE_USERNAME", "SALESFORCE_PASSWORD"],
    "tags": ["salesforce", "crm", "sales", "enterprise"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_hubspot",
    "type": "crm",
    "title": "HubSpot",
    "subtitle": "Marketing & Sales",
    "category": "data-sources",
    "subcategory": "apis",
    "description": "Interact with HubSpot CRM and Marketing Hub",
    "icon": "target",
    "variant": "orange-500",
    "shape": "rounded-square",
    "size": "medium",
    "ports": [
      { "id": "data-in", "label": "Data", "type": "input", "position": "left" },
      { "id": "filter-in", "label": "Filters", "type": "input", "position": "top" },
      { "id": "results-out", "label": "Results", "type": "output", "position": "right" },
      { "id": "metrics-out", "label": "Metrics", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "objectType": { "type": "select", "options": ["contacts", "companies", "deals", "tickets"], "defaultValue": "contacts" },
      "operation": { "type": "select", "options": ["get", "create", "update", "search", "batch"], "defaultValue": "get" },
      "properties": { "type": "textarea", "placeholder": "firstname,lastname,email" },
      "associations": { "type": "boolean", "defaultValue": false }
    },
    "requiredEnvVars": ["HUBSPOT_API_KEY"],
    "tags": ["hubspot", "crm", "marketing", "sales"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_http_request",
    "type": "http",
    "title": "HTTP Request",
    "subtitle": "Make HTTP API Calls",
    "category": "tools-utilities",
    "subcategory": "http",
    "description": "Make HTTP requests to external APIs and services",
    "icon": "globe",
    "variant": "blue-600",
    "shape": "rectangle",
    "size": "medium",
    "ports": [
      { "id": "data-in", "label": "Request Data", "type": "input", "position": "left" },
      { "id": "headers-in", "label": "Headers", "type": "input", "position": "top" },
      { "id": "response-out", "label": "Response", "type": "output", "position": "right" },
      { "id": "error-out", "label": "Error", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "url": { "type": "text", "required": true, "placeholder": "https://api.example.com/data" },
      "method": { "type": "select", "options": ["GET", "POST", "PUT", "PATCH", "DELETE"], "defaultValue": "GET" },
      "timeout": { "type": "number", "defaultValue": 30000, "min": 1000, "max": 300000 },
      "retryCount": { "type": "number", "defaultValue": 3, "min": 0, "max": 10 },
      "followRedirects": { "type": "boolean", "defaultValue": true }
    },
    "tags": ["http", "api", "request", "web"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_graphql_query",
    "type": "graphql",
    "title": "GraphQL Query",
    "subtitle": "Execute GraphQL Operations",
    "category": "tools-utilities",
    "subcategory": "http",
    "description": "Execute GraphQL queries and mutations",
    "icon": "layers",
    "variant": "gray-700",
    "shape": "hexagon",
    "size": "medium",
    "ports": [
      { "id": "variables-in", "label": "Variables", "type": "input", "position": "left" },
      { "id": "data-out", "label": "Data", "type": "output", "position": "right" },
      { "id": "errors-out", "label": "Errors", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "endpoint": { "type": "text", "required": true, "placeholder": "https://api.example.com/graphql" },
      "query": { 
        "type": "code-editor", 
        "language": "graphql", 
        "required": true, 
        "lineNumbers": true,
        "placeholder": "query GetUsers($limit: Int) {\n  users(limit: $limit) {\n    id\n    name\n    email\n  }\n}" 
      },
      "operationType": { "type": "select", "options": ["query", "mutation", "subscription"], "defaultValue": "query" }
    },
    "requiredEnvVars": ["GRAPHQL_API_KEY"],
    "tags": ["graphql", "api", "query", "mutation"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_rpc_call",
    "type": "rpc",
    "title": "RPC Call",
    "subtitle": "Remote Procedure Call",
    "category": "tools-utilities",
    "subcategory": "http",
    "description": "Make JSON-RPC or gRPC calls",
    "icon": "server",
    "variant": "gray-600",
    "shape": "rectangle",
    "size": "medium",
    "ports": [
      { "id": "params-in", "label": "Parameters", "type": "input", "position": "left" },
      { "id": "result-out", "label": "Result", "type": "output", "position": "right" },
      { "id": "error-out", "label": "Error", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "protocol": { "type": "select", "options": ["json-rpc", "grpc", "xml-rpc"], "defaultValue": "json-rpc" },
      "endpoint": { "type": "text", "required": true, "placeholder": "https://rpc.example.com" },
      "method": { "type": "text", "required": true, "placeholder": "getUser" },
      "version": { "type": "text", "defaultValue": "2.0" }
    },
    "tags": ["rpc", "remote", "api", "protocol"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_math_operations",
    "type": "math",
    "title": "Math Operations",
    "subtitle": "Calculate & Transform",
    "category": "tools-utilities",
    "subcategory": "math",
    "description": "Perform mathematical operations on data",
    "icon": "calculator",
    "variant": "gray-800",
    "shape": "circle",
    "size": "small",
    "ports": [
      { "id": "a-in", "label": "A", "type": "input", "position": "left" },
      { "id": "b-in", "label": "B", "type": "input", "position": "top" },
      { "id": "result-out", "label": "Result", "type": "output", "position": "right" }
    ],
    "properties": {
      "operation": { "type": "select", "options": ["add", "subtract", "multiply", "divide", "power", "sqrt", "abs", "round"], "defaultValue": "add" },
      "precision": { "type": "number", "defaultValue": 2, "min": 0, "max": 10 },
      "expression": { "type": "text", "placeholder": "a * b + 10" }
    },
    "tags": ["math", "calculate", "arithmetic", "utility"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_json_parser",
    "type": "parser",
    "title": "JSON Parser",
    "subtitle": "Parse & Transform JSON",
    "category": "tools-utilities",
    "subcategory": "text",
    "description": "Parse and transform JSON data",
    "icon": "braces",
    "variant": "green-600",
    "shape": "rectangle",
    "size": "medium",
    "ports": [
      { "id": "json-in", "label": "JSON", "type": "input", "position": "left" },
      { "id": "schema-in", "label": "Schema", "type": "input", "position": "top" },
      { "id": "parsed-out", "label": "Parsed", "type": "output", "position": "right" },
      { "id": "errors-out", "label": "Errors", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "jsonPath": { "type": "text", "placeholder": "$.users[*].email" },
      "strictMode": { "type": "boolean", "defaultValue": true },
      "allowComments": { "type": "boolean", "defaultValue": false },
      "validateSchema": { "type": "boolean", "defaultValue": false }
    },
    "tags": ["json", "parser", "transform", "data"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_xml_parser",
    "type": "parser",
    "title": "XML Parser",
    "subtitle": "Parse XML Documents",
    "category": "tools-utilities",
    "subcategory": "text",
    "description": "Parse and transform XML documents",
    "icon": "code",
    "variant": "orange-600",
    "shape": "rectangle",
    "size": "medium",
    "ports": [
      { "id": "xml-in", "label": "XML", "type": "input", "position": "left" },
      { "id": "xpath-in", "label": "XPath", "type": "input", "position": "top" },
      { "id": "data-out", "label": "Data", "type": "output", "position": "right" },
      { "id": "errors-out", "label": "Errors", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "xpath": { "type": "text", "placeholder": "//users/user[@active='true']" },
      "namespaces": { "type": "textarea", "placeholder": "{ \"ns\": \"http://example.com/ns\" }" },
      "outputFormat": { "type": "select", "options": ["json", "array", "object"], "defaultValue": "json" }
    },
    "tags": ["xml", "parser", "xpath", "data"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_regex_matcher",
    "type": "text",
    "title": "Regex Matcher",
    "subtitle": "Pattern Matching",
    "category": "tools-utilities",
    "subcategory": "text",
    "description": "Match and extract data using regular expressions",
    "icon": "regex",
    "variant": "orange-700",
    "shape": "rectangle",
    "size": "medium",
    "ports": [
      { "id": "text-in", "label": "Text", "type": "input", "position": "left" },
      { "id": "pattern-in", "label": "Pattern", "type": "input", "position": "top" },
      { "id": "matches-out", "label": "Matches", "type": "output", "position": "right" },
      { "id": "groups-out", "label": "Groups", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "pattern": { "type": "text", "required": true, "placeholder": "\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\b" },
      "flags": { "type": "select", "multiple": true, "options": ["i", "g", "m", "s"], "defaultValue": ["g"] },
      "returnType": { "type": "select", "options": ["matches", "groups", "split", "replace"], "defaultValue": "matches" }
    },
    "tags": ["regex", "pattern", "text", "match"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_date_time",
    "type": "datetime",
    "title": "Date/Time",
    "subtitle": "Date Operations",
    "category": "tools-utilities",
    "subcategory": "utilities",
    "description": "Parse, format, and manipulate dates and times",
    "icon": "calendar",
    "variant": "blue-600",
    "shape": "circle",
    "size": "small",
    "ports": [
      { "id": "date-in", "label": "Date", "type": "input", "position": "left" },
      { "id": "formatted-out", "label": "Formatted", "type": "output", "position": "right" },
      { "id": "timestamp-out", "label": "Timestamp", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "operation": { "type": "select", "options": ["format", "parse", "add", "subtract", "diff", "now"], "defaultValue": "format" },
      "format": { "type": "text", "defaultValue": "YYYY-MM-DD HH:mm:ss" },
      "timezone": { "type": "text", "defaultValue": "UTC" },
      "unit": { "type": "select", "options": ["years", "months", "days", "hours", "minutes", "seconds"], "defaultValue": "days" }
    },
    "tags": ["date", "time", "datetime", "format"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_state_store",
    "type": "storage",
    "title": "State Store",
    "subtitle": "Persistent State Management",
    "category": "storage-memory",
    "subcategory": "sessions",
    "description": "Store and retrieve persistent state across workflow executions",
    "icon": "hard-drive",
    "variant": "gray-700",
    "shape": "rectangle",
    "size": "medium",
    "ports": [
      { "id": "key-in", "label": "Key", "type": "input", "position": "left" },
      { "id": "value-in", "label": "Value", "type": "input", "position": "top" },
      { "id": "stored-out", "label": "Stored Value", "type": "output", "position": "right" },
      { "id": "success-out", "label": "Success", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "operation": { "type": "select", "options": ["get", "set", "delete", "exists"], "defaultValue": "get" },
      "namespace": { "type": "text", "placeholder": "workflow_state" },
      "ttl": { "type": "number", "placeholder": 3600, "description": "Time to live in seconds (0 = no expiry)" },
      "storageType": { "type": "select", "options": ["memory", "redis", "file"], "defaultValue": "memory" }
    },
    "tags": ["storage", "state", "memory", "persistence"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_variable_lookup",
    "type": "variable",
    "title": "Variable Lookup",
    "subtitle": "Dynamic Variable Access",
    "category": "storage-memory",
    "subcategory": "variables",
    "description": "Look up and resolve variables from different scopes",
    "icon": "search",
    "variant": "gray-600",
    "shape": "circle",
    "size": "small",
    "ports": [
      { "id": "name-in", "label": "Variable Name", "type": "input", "position": "left" },
      { "id": "value-out", "label": "Value", "type": "output", "position": "right" },
      { "id": "found-out", "label": "Found", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "scope": { "type": "select", "options": ["workflow", "global", "environment", "runtime"], "defaultValue": "workflow" },
      "defaultValue": { "type": "text", "placeholder": "Default if not found" },
      "cacheResult": { "type": "boolean", "defaultValue": true },
      "throwOnMissing": { "type": "boolean", "defaultValue": false }
    },
    "tags": ["variable", "lookup", "scope", "dynamic"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_cache",
    "type": "cache",
    "title": "Cache",
    "subtitle": "In-Memory Cache",
    "category": "storage-memory",
    "subcategory": "cache",
    "description": "Cache data in memory with TTL support",
    "icon": "database",
    "variant": "gray-700",
    "shape": "rounded-square",
    "size": "medium",
    "ports": [
      { "id": "key-in", "label": "Key", "type": "input", "position": "left" },
      { "id": "value-in", "label": "Value", "type": "input", "position": "top" },
      { "id": "cached-out", "label": "Cached Value", "type": "output", "position": "right" },
      { "id": "hit-out", "label": "Cache Hit", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "operation": { "type": "select", "options": ["get", "set", "delete", "clear", "has"], "defaultValue": "get" },
      "ttl": { "type": "number", "defaultValue": 300, "description": "Time to live in seconds" },
      "maxSize": { "type": "number", "defaultValue": 1000, "description": "Maximum cache entries" },
      "evictionPolicy": { "type": "select", "options": ["lru", "lfu", "fifo"], "defaultValue": "lru" }
    },
    "tags": ["cache", "memory", "performance", "storage"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_redis",
    "type": "redis",
    "title": "Redis",
    "subtitle": "Redis Operations",
    "category": "storage-memory",
    "subcategory": "cache",
    "description": "Interact with Redis for caching and data storage",
    "icon": "database",
    "variant": "gray-800",
    "shape": "rectangle",
    "size": "medium",
    "ports": [
      { "id": "command-in", "label": "Command", "type": "input", "position": "left" },
      { "id": "args-in", "label": "Arguments", "type": "input", "position": "top" },
      { "id": "result-out", "label": "Result", "type": "output", "position": "right" },
      { "id": "error-out", "label": "Error", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "command": { "type": "select", "options": ["GET", "SET", "DEL", "EXISTS", "EXPIRE", "HGET", "HSET", "LPUSH", "RPOP"], "defaultValue": "GET" },
      "key": { "type": "text", "required": true, "placeholder": "mykey" },
      "database": { "type": "number", "defaultValue": 0, "min": 0, "max": 15 },
      "expiry": { "type": "number", "placeholder": 3600 }
    },
    "requiredEnvVars": ["REDIS_URL", "REDIS_PASSWORD"],
    "tags": ["redis", "cache", "database", "nosql"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_queue",
    "type": "queue",
    "title": "Queue",
    "subtitle": "Message Queue",
    "category": "storage-memory",
    "subcategory": "sessions",
    "description": "Send and receive messages from queues",
    "icon": "list",
    "variant": "gray-800",
    "shape": "rounded-square",
    "size": "medium",
    "ports": [
      { "id": "message-in", "label": "Message", "type": "input", "position": "left" },
      { "id": "options-in", "label": "Options", "type": "input", "position": "top" },
      { "id": "received-out", "label": "Received", "type": "output", "position": "right" },
      { "id": "ack-out", "label": "Acknowledgment", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "operation": { "type": "select", "options": ["send", "receive", "peek", "ack", "nack"], "defaultValue": "send" },
      "queueName": { "type": "text", "required": true, "placeholder": "task-queue" },
      "provider": { "type": "select", "options": ["rabbitmq", "sqs", "kafka", "redis"], "defaultValue": "rabbitmq" },
      "maxMessages": { "type": "number", "defaultValue": 1, "min": 1, "max": 10 }
    },
    "requiredEnvVars": ["QUEUE_CONNECTION_STRING"],
    "tags": ["queue", "messaging", "async", "mq"],
    "version": "1.0.0",
    "isActive": true
  },
  {
    "id": "tpl_event_emitter",
    "type": "event",
    "title": "Event Emitter",
    "subtitle": "Publish Events",
    "category": "storage-memory",
    "subcategory": "sessions",
    "description": "Emit events to event bus or pub/sub systems",
    "icon": "broadcast",
    "variant": "gray-700",
    "shape": "circle",
    "size": "medium",
    "ports": [
      { "id": "event-in", "label": "Event", "type": "input", "position": "left" },
      { "id": "data-in", "label": "Data", "type": "input", "position": "top" },
      { "id": "published-out", "label": "Published", "type": "output", "position": "right" },
      { "id": "id-out", "label": "Event ID", "type": "output", "position": "bottom" }
    ],
    "properties": {
      "eventName": { "type": "text", "required": true, "placeholder": "user.created" },
      "channel": { "type": "text", "placeholder": "default" },
      "persistence": { "type": "boolean", "defaultValue": false },
      "priority": { "type": "select", "options": ["low", "normal", "high"], "defaultValue": "normal" }
    },
    "tags": ["event", "pubsub", "messaging", "async"],
    "version": "1.0.0",
    "isActive": true
  }
]